module.exports = function (app, Story, User) {  // get all stories  app.get('/api/stories/list', function (req, res) {    Story.find(function (err, stories) {      if (err) {        return res.status(500).send({error: 'database failure'});      }      res.json(stories);    })  });  // get a story by story id  app.get('/api/stories/list/:story_id', function (req, res) {    Story.findOne({_id: req.params.story_id}, function (err, user) {      if (err) {        return res.status(500).json({error: err});      }      if (!user) {        return res.status(404).json({error: 'story not found'});      }      res.json(user);    })  });  // post story  app.post('/api/stories/post', function (req, res) {    var story = new Story();    story.user_id = req.body.user_id;    story.city_name = req.body.city_name;    story.town_name = req.body.town_name;    if (!_.isUndefined(req.body.created_date)) {      story.time = new Date(req.body.time);    }    story.photo_url = req.body.photo_url;    story.note = req.body.note;    story.hash_tags = req.body.hash_tags;    story.follower = req.body.follower;    story.liker = req.body.liker;    story.flag = req.body.flag;    story.reason = req.body.reason;    story.save(function (err, story) {      if (err) {        console.error(err);        res.json({result: 0, reason: err});        return;      }      res.json({result: 1, story_id:story._id});    });  });  // fetch the stories by city  app.post('/api/stories/list/city', function (req, res) {    Story.find({city_name: req.body.city_name}, function (err, stories) {      if (err) {        return res.status(500).send({error: 'database failure'});      }      var storyIds = [];      _.each(stories, (story) => {        storyIds.push(story._id);      });      res.json(storyIds);    })  });  // fetch the stories by hash tag  app.post('/api/stories/list/tag', function (req, res) {    Story.find({hash_tags: req.body.hash_tags}, function (err, stories) {      if (err) {        return res.status(500).send({error: 'database failure'});      }      var storyIds = [];      _.each(stories, (story) => {        storyIds.push(story._id);      });      res.json(storyIds);    })  });  // fetch the stories by user name  app.post('/api/stories/list/user_name', function (req, res) {    User.findOne({user_name: req.body.user_name}, function (err, user) {      if (_.isNull(user)) {        return res.status(404).json({result: 0});      }      if (_.isUndefined(user)) {        return res.status(404).json({result: 0});      }      Story.find({user_id: user._id}, function (err, stories) {        if (err) {          return res.status(500).send({error: 'database failure'});        }        var storyIds = [];        _.each(stories, (story) => {          storyIds.push(story._id);        });        res.json(storyIds);      })    })  });  // delete an user by story id  app.delete('/api/stories/delete/:story_id', function (req, res) {    Story.remove({_id: req.params.story_id}, function (err, output) {      if (err) return res.status(500).json({error: "database failure"});      res.status(204).end();    })  });}